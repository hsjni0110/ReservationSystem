# 한국 주요 버스터미널 정보

TERMINALS = {
    '서울권': [
        '서울고속버스터미널',
        '센트럴시티터미널', 
        '동서울종합터미널',
        '서울남부터미널'
    ],
    '경기권': [
        '인천종합버스터미널',
        '수원종합버스터미널',
        '성남종합버스터미널',
        '안양종합버스터미널',
        '고양종합터미널',
        '부천터미널 소풍'
    ],
    '충청권': [
        '대전복합버스터미널',
        '청주고속버스터미널',
        '천안고속버스터미널',
        '충주공용버스터미널',
        '아산온양고속버스터미널'
    ],
    '전라권': [
        '광주종합버스터미널',
        '전주고속버스터미널',
        '목포고속버스터미널',
        '순천종합버스터미널',
        '군산고속버스터미널'
    ],
    '경상북도권': [
        '동대구터미널',
        '서대구고속버스터미널',
        '포항고속버스터미널',
        '경주고속버스터미널',
        '안동고속버스터미널'
    ],
    '경상남도권': [
        '부산종합버스터미널',
        '부산서부시외버스터미널',
        '창원종합버스터미널',
        '울산고속버스터미널',
        '진주고속버스터미널',
        '통영고속버스터미널'
    ],
    '강원권': [
        '춘천고속버스터미널',
        '강릉고속버스터미널',
        '원주고속버스터미널',
        '속초고속버스터미널',
        '삼척고속버스터미널',
        '태백고속버스터미널'
    ]
}

# 권역 간 주요 노선 우선순위 (높을수록 더 많은 운행)
ROUTE_PRIORITY = {
    ('서울권', '경상북도권'): 5,  # 서울-대구
    ('서울권', '경상남도권'): 5,  # 서울-부산
    ('서울권', '전라권'): 4,     # 서울-광주
    ('서울권', '충청권'): 4,     # 서울-대전
    ('서울권', '강원권'): 3,     # 서울-강원
    ('서울권', '경기권'): 2,     # 서울-경기 (단거리)
    ('경기권', '경상남도권'): 3,  # 경기-부산
    ('경기권', '경상북도권'): 3,  # 경기-대구
    ('충청권', '경상남도권'): 3,  # 대전-부산
    ('충청권', '경상북도권'): 3,  # 대전-대구
    ('전라권', '경상남도권'): 2,  # 광주-부산
    ('전라권', '경상북도권'): 2,  # 광주-대구
    ('경상북도권', '경상남도권'): 2, # 대구-부산
    ('강원권', '경상남도권'): 1,  # 강원-부산
    ('강원권', '경상북도권'): 1,  # 강원-대구
}

def get_all_terminals():
    """모든 터미널의 평면 리스트 반환"""
    all_terminals = []
    for region_terminals in TERMINALS.values():
        all_terminals.extend(region_terminals)
    return all_terminals

def get_region_by_terminal(terminal):
    """터미널명으로 권역 조회"""
    for region, terminals in TERMINALS.items():
        if terminal in terminals:
            return region
    return None

def get_route_priority(region1, region2):
    """두 권역 간 노선 우선순위 조회"""
    key1 = (region1, region2)
    key2 = (region2, region1)
    return ROUTE_PRIORITY.get(key1, ROUTE_PRIORITY.get(key2, 1))